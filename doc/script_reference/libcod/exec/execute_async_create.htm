<HTML>
<HEAD>
</HEAD>

<style type="text/css">
<!--
H1  { padding: 0; margin: 0; font-size: 16pt; font-weight:bold; font-family:courier new; }
H2  { padding: 0; margin: 4; }
H3  { padding: 0; margin: 4; font-size: 13pt; font-weight:normal; }
P   { padding: 0; margin: 4; }
PRE { padding: 0; margin: 4; font-size: 10pt; font-weight:normal; color:#EEEEEE; }
TD  { padding: 4; margin: 0; }
UL  { margin-bottom:0; }
-->
</style>

<HR>
<H1>execute_async_create( &lt;command&gt;, &lt;callback function&gt;, &lt;parameter&gt; )</H1>
<HR>
<BODY BGCOLOR='B0C4DE'>
<I>
Module: Exec<BR>
</I>

<BR>
<H2>Summary:</H2>
<TABLE BORDER='1' CELLSPACING='1' CELLPADDING='4' WIDTH='100%'>
<TR><TD BGCOLOR="C0D4EE">
<H3>
<p>Executes a shell command (via popen using /bin/sh as shell) in another thread and returns the result of it. Requires to use <a href="execute_async_checkdone.htm">execute_async_checkdone</a> once every server frame to poll the result. If the call to popen fails, an error is printed to console and the script callback function (if defined) is not called.</p>

</H3>
</TR></TD></TABLE>
<BR><BR>
<H2>Example:</H2>
<TABLE BORDER="1" CELLSPACING="1" CELLPADDING="4" WIDTH="100%">
<TR><TD BGCOLOR="222222">
<H3>
<PRE>
execLoop()
{
    while(true) {
        execute_async_checkdone();
        wait 0.05;
    }
}

execRun()
{
    execute_async_create("ls", ::execCallback, 123);
}

execCallback(output, parameter)
{
    if(isDefined(output)) // Type ARRAY
        logPrintConsole("Exec async thread returned with parameter " + parameter + " and output\n");
    else
        logPrintConsole("Exec async thread returned with parameter " + parameter + "\n");
}
</PRE>
</H3>
</TR></TD></TABLE>
<BR><BR>
<H2>Required Args:</H2>
<TABLE BORDER="1" CELLSPACING="1" CELLPADDING="4" WIDTH="100%">
<TR><TD BGCOLOR="C0D4EE">
<UL>
<LI>1 : &lt;command&gt; Command to execute</LI>
</UL></TR></TD></TABLE>
<BR>
<H2>Optional Args</H2>
<TABLE BORDER="1" CELLSPACING="1" CELLPADDING="4" WIDTH="100%">
<TR><TD BGCOLOR="C0D4EE">
<UL>
<LI>1 : &lt;callback function&gt; Script callback function to call on completion, with result array as first argument</LI>
<LI>2 : &lt;parameter&gt; Optional parameter passed to the script callback function as second argument</LI>
</UL></TR></TD></TABLE>
<BR>
</BODY>
</HTML>
